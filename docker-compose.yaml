version: '3'
 
services:
  db:
    image: postgres:latest
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: testdb
    ports:
    - 5432
    volumes:
     - /server/target/classes/schema.sql:/docker-entrypoint-initdb.d/
     - /server/target/classes/data.sql:/docker-entrypoint-initdb.d/
    networks:
     - backendNetwork
      
  api:
    image: openjdk:8
    command: cd server && mvn clean package
    container_name: api
    ports:
      - 8900:8900
    environment:
      SPRING_PROFILES_ACTIVE: dev
      JAVA_HEAP_SIZE_MB: 1024
    depends_on:
      - db    
    volumes:
      - /init-users.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - ./server/target/server-0.0.1-SNAPSHOT.jar:/server-0.0.1-SNAPSHOT.jar      
    command: ["java", "-jar", "/server-0.0.1-SNAPSHOT.jar"]
    networks:
      - backendNetwork
      - frontendNetwork
       
  angular:
    image: nginx:alpine
    container_name: angular
    ports: 
      - 4200:80
    depends_on:
      - api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./client/dist/client/:/usr/share/nginx/html
    networks:
      - frontendNetwork
     
 
volumes:
  dockerAngularSpringDatabaseData:
   
networks:
  backendNetwork:
  frontendNetwork: