diff a/client/src/app/modules/places/place/place.component.spec.ts b/client/src/app/modules/places/place/place.component.spec.ts	(rejected hunks)
@@ -3,6 +3,6 @@ import { async, ComponentFixture, TestBed } from '@angular/core/testing';
-import { PlaceComponent }      from './place.component';
-import { MatIconModule }       from '@angular/material';
-import { RouterModule }        from '@angular/router';
-import { PlacesService }       from '../places.service';
-import { PlacesModel }         from '../places.model';
-import { RouterTestingModule } from "@angular/router/testing";
+import { PlaceComponent } from './place.component';
+import { MatIconModule } from '@angular/material';
+import { RouterModule } from '@angular/router';
+import { PlacesService } from '../places.service';
+import { PlacesModel } from '../places.model';
+import { RouterTestingModule } from '@angular/router/testing';
@@ -26 +26 @@ describe('PlaceComponent', () => {
-        expect(component).toBeTruthy();
+    expect(component).toBeTruthy();
@@ -28,17 +28,15 @@ describe('PlaceComponent', () => {
-    
-    it(`should NOT have any user in list before ngOnInit`, () => {
-        expect(component.place).toBe(undefined);
-    });
-    
-    it(`should get the place after ngOnInit`, async(() => {
-        const placesService = new PlacesService();
-        const place = placesService.getPlace(1);
-        PlaceComponent.prototype.place = place;
-        
-        fixture.detectChanges(); // This triggers the ngOnInit and thus the getUserList() method
-        
-        // Works perfectly. ngOnInit was triggered and my list is OK
-        expect(component.place.id).toBe(1);
-    }));
-  
-  
+
+  it(`should NOT have any user in list before ngOnInit`, () => {
+    expect(component.place).toBe(undefined);
+  });
+
+  it(`should get the place after ngOnInit`, async(() => {
+    const placesService = new PlacesService();
+    const place = placesService.getPlace(1);
+    PlaceComponent.prototype.place = place;
+
+    fixture.detectChanges(); // This triggers the ngOnInit and thus the getUserList() method
+
+    // Works perfectly. ngOnInit was triggered and my list is OK
+    expect(component.place.id).toBe(1);
+  }));
